/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mwh {
time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};

/ { 
		behaviors {
			bhm: balanced_homerow_mods {
				compatible = "zmk,behavior-hold-tap";
				label = "HOMEROW_MODS";
				#binding-cells = <2>;
				tapping-term-ms = <200>;    // <---[[moderate duration]]
				quick-tap-ms = <0>;
				flavor = "balanced";
				bindings = <&kp>, <&kp>;
			};
			
			blm: balanced_layer_mous {
				compatible = "zmk,behavior-hold-tap";
				label = "MOUSE_MODS";
				#binding-cells = <2>;
				tapping-term-ms = <200>;    // <---[[moderate duration]]
				quick-tap-ms = <0>;
				flavor = "balanced";
				bindings = <&mo>, <&mkp>;
			};

			tdlc: tap_dance_leftclick {
				compatible = "zmk,behavior-tap-dance";
				label = "TapDanceL";
				#binding-cells = <0>;
				tapping-term-ms = <400>;
				bindings = <&bhm LCTRL T>, <&mkp LCLK>;
			};

			tdrc: tap_dance_rightclick {
				compatible = "zmk,behavior-tap-dance";
				label = "TapDanceR";
				#binding-cells = <0>;
				tapping-term-ms = <400>;
				bindings = <&bhm LGUI S>, <&mkp RCLK>;
			};
		};
		
		combos {
			compatible = "zmk,combos";
			combo_mute {
				timeout-ms = <50>;
				key-positions = <0 1>;
				bindings = <&kp TILDE2>;
			};
			
/*			combo_leftclick {
				timeout-ms = <50>;
				key-positions = <11 12>;
				bindings = <&mkp RCLK>;
			};
			
			combo_rightclick {
				timeout-ms = <50>;
				key-positions = <12 13>;
				bindings = <&mkp LCLK>;
			};*/
			
			combo_middleclick {
				timeout-ms = <50>;
				key-positions = <12 13>;
				bindings = <&blm 2 MCLK>;
			};

			combo_bootloader {
				timeout-ms = <50>;
				key-positions = <0 30>;
				bindings = <&bootloader	>;
			};
		};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
							&kp Q 			&kp W 			&kp F   		&kp P       	&kp G    					&kp J			&kp L       	&kp U    		&kp Y   		&kp SEMI
							&bhm LSHIFT A 	&bhm LALT R 	&tdrc			&tdlc 			&kp D    					&kp H 			&bhm LCTRL N    &bhm LGUI E 	&bhm LALT I 	&bhm LSHIFT O  
							&kp Z 			&kp X 			&kp C 			&kp V     		&kp B    					&kp K 			&kp M       	&kp CMMA 		&kp DOT 		&kp FSLH
																							&lt 1 SPACE    				&lt 2 BSPC  	&lt 3 ENTER
                        >;
						trackball-bindings = <&tmv>;
                };
				
                num_layer {
                        bindings = <
						    &kp F6 			&kp F4 			&kp F2 			&kp F10 		&kp F8     					&kp F9 			&kp F1			&kp F3			&kp F5			&kp F7
							&bhm LSHIFT N6	&bhm LALT N4    &bhm LGUI N2 	&bhm LCTRL N0  	&kp N8       				&kp N9      	&bhm LCTRL N1 	&bhm LGUI N3   	&bhm LALT N5	&bhm LSHIFT N7
							&kp BSLH        &kp SQT  		&none    		&none      		&kp F11        				&kp F12	 		&kp LBKT		&kp RBKT		&kp MINUS 		&kp EQUAL
																							&none      					&kp BSPC		&kp ENTER
                        >;
						trackball-bindings = <&tsl>;
                };
				
                mov_layer {
                        bindings = <
						   &kp ESC 			&kp HOME   		&kp UP   		&kp END    		&none 					    &none     		&none        	&none	      	&none      		&kp DEL
						   &kp TAB      	&kp LEFT   		&kp DOWN		&kp RIGHT  		&none   			    	&none	    	&kp LCTRL		&kp LGUI  		&kp LALT		&bhm LSHIFT K_CMENU 
						   &none	 		&kp C_PREV 	 	&kp C_PP  		&kp C_NEXT		&none						&none		 	&none			&none			&none 			&none
				 																			&kp SPACE					&none		 	&none
						>;
						trackball-bindings = <&tsl>;
                };
				
				fnc_layer {
                        bindings = <
						   &bt BT_SEL 3     &bt BT_SEL 2 	&bt BT_SEL 1	&bt BT_SEL 0 	&bt BT_CLR		   			&none	    	&none			&none			&none			&none	 
						   &none	 		&none 	 		&none			&none			&none		           		&none			&none			&none			&none 			&none
						   &none	 		&none 	 		&none			&none			&none		           		&none			&bootloader		&none			&none 			&none
																							&kp SPACE     				&none			&none
						>;
						trackball-bindings = <&tkp RIGHT LEFT DOWN UP>;
                };
				
				fus_layer {
                        bindings = <
							&kp Q 			&kp W 			&kp F   		&kp P       	&kp G    					&kp J			&kp L       	&kp U    		&kp Y   		&tog 4
							&bhm LSHIFT A 	&bhm LALT R 	&bhm LGUI S 	&bhm LCTRL T 	&kp D    					&kp H 			&mkp LCLK    	&mkp RCLK 		&mkp MCLK		&mkp RS(MCLK)  
							&kp Z 			&kp X 			&kp C 			&kp V     		&kp B    					&kp K 			&kp M       	&kp CMMA 		&kp DOT 		&kp FSLH
																							&lt 1 SPACE    				&lt 2 BSPC  	&lt 3 ENTER
                        >;
						trackball-bindings = <&tmv>;
                };
				
				sho_layer {
                        bindings = <
						   &kp TAB			&kp Q 			&kp W			&kp E 			&kp R      					&none 			&none 			&none			&none 			&tog 5
						   &kp LSHIFT     	&kp A		   	&kp S			&kp D 			&kp F 		   		    	&none	    	&mkp LCLK     	&mkp RCLK   	&mkp MCLK		&none
						   &kp LCTRL		&kp Y 	 		&kp X  			&kp C			&kp V           			&none			&none			&none			&none 			&none
																							&lt 1 SPACE     			&none			&none
						>;
						trackball-bindings = <&tmv>;
                };
        };
};